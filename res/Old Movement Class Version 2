import java.util.Random;

public class Movement {

	MainBody main;
	Random r = new Random();

	public Movement(MainBody main){
		this.main = main;
	}
	
	/*
	public boolean insidemove(String statement){
		if(main.getPlace() == main.getPlace().PLANE){
			int y = main.getInside().y;
			if (main.findKeyword(statement, "north")>=0){
				y -= 1;
				if(y < 0){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y - 1;
					return false;
				}else{
					return true;
				}
			}else if (main.findKeyword(statement, "south") >= 0){
				y+=1;
				if(y>2){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y + 1;
					return false;
				}else{
					return true;
				}
			}else if (main.findKeyword(statement, "east") >= 0){
				main.setInsides(main.getInsides().NONE);
				main.getOutside().x = main.getOutside().x + 1;
				return false;
			}else if (main.findKeyword(statement, "west") >= 0){
				main.setInsides(main.getInsides().NONE);
				main.getOutside().x = main.getOutside().x - 1;
				return false;
			}else if (main.findKeyword(statement, "up") >= 0){
				main.addMessage("There's nothing to climb", "AI");
				return false;
			}else if (main.findKeyword(statement, "down") >= 0){
				main.addMessage("There's nothing to climb", "AI");
				return false;
			}
		}else if(main.getPlace() == main.getPlace().HOUSE){
			int x = main.getInside().x;
			if (main.findKeyword(statement, "north")>=0){
				if(main.getInside().x == 1  && (main.getInside().z == 0)){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y - 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}
			}else if (main.findKeyword(statement, "south") >= 0){
				main.addMessage("There's something in the way", "AI");
				return false;
			}else if (main.findKeyword(statement, "east") >= 0){
				x+=1;
				if((x>2)||(main.getInside().z == 1)){
					main.addMessage("There's something in the way", "AI");
					return false;
				}else{
					return true;
				}
			}else if (main.findKeyword(statement, "west") >= 0){
				x-=1;
				if((x<0)||(main.getInside().z == 1)){
					main.addMessage("There's something in the way", "AI");
					return false;
				}else{
					return true;
				}
			}else if (main.findKeyword(statement, "up") >= 0){
				if((main.getInside().x == 1) && (main.getInside().y == 0) && (main.getInside().z == 0)){
					return true;
				}else{
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "down") >= 0){
				if((main.getInside().x == 0) && (main.getInside().y == 0) && (main.getInside().z == 0)){
					main.addMessage("As you descend the ladder you slip off and fall for a while.", "AI");
					main.addMessage("After hitting the ground you open your eyes to a completely different room.", "AI");
					main.setHealth(main.getHealth()-25);
					main.setPlace(main.getPlace().TEMPLE);
					main.setInsides(main.getInsides().MAZE_x0y3);
					main.getInside().x = 0; 
					main.getInside().y = 3; 
					main.getInside().z = 0;
					return false;
				}else if((main.getInside().x == 1) && (main.getInside().y == 0) && (main.getInside().z == 1)){
					return true;
				}else{	
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}
		}else if(main.getPlace() == main.getPlace().TREEHOUSE){
			if (main.findKeyword(statement, "north")>=0){
				if(main.getInside().z == 0){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y - 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}
			}else if (main.findKeyword(statement, "south") >= 0){
				if(main.getInside().z == 0){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y + 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}
			}else if (main.findKeyword(statement, "east") >= 0){
				if(main.getInside().z == 0){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().x = main.getOutside().x + 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}
			}else if (main.findKeyword(statement, "west") >= 0){
				if(main.getInside().z == 0){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().x = main.getOutside().x - 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}
			}else if (main.findKeyword(statement, "up") >= 0){
				if((main.getInside().z == 0) && (main.getLockedDoors()[2] == false)){
					main.addMessage("The hatch is locked. Try using a key.", "AI");
					return false;
				}else if(main.getInside().z == 0){
					return true;
				}else{
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "down") >= 0){
				if(main.getInside().z == 1){
					return true;
				}else{
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}
		}else if(main.getPlace() == main.getPlace().SHACK){
			if (main.findKeyword(statement, "north")>=0){
				if(main.getInside().z == 1){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y - 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}
			}else if (main.findKeyword(statement, "south") >= 0){
				main.addMessage("There's something in the way", "AI");
				return false;	
			}else if (main.findKeyword(statement, "east") >= 0){
				main.addMessage("There's something in the way", "AI");
				return false;
			}else if (main.findKeyword(statement, "west") >= 0){
				main.addMessage("There's something in the way", "AI");
				return false;
			}else if (main.findKeyword(statement, "up") >= 0){
				if(main.getInside().z == 0){
					return true;
				}else{
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "down") >= 0){
				if(main.getInside().z == 1){
					return true;
				}else{
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}
		}else if(main.getPlace() == main.getPlace().TEMPLE){
			int x = main.getInside().x;
			int y = main.getInside().y;
			int luck = r.nextInt(4);
			if (main.findKeyword(statement, "north")>=0){
				y -= 1;
				if(main.getInside().x == 1 && main.getInside().y == 0 && main.getInside().z == 1){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y - 1;
					return false;
				}else if(main.getInside().z == 0){
					if(y >= 0){
						if((luck == 3)){
							return false;
						}else{
							return true;
						}
					}else{
						return false;
					}
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}
			}else if (main.findKeyword(statement, "south") >= 0){
				y += 1;
				if(main.getInside().x == 1 && main.getInside().y == 0 && main.getInside().z == 1){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y + 1;
					return false;
				}else if(main.getInside().z == 0){
					if(y<=3){
						if((luck == 3)){
							return false;
						}else{
							return true;
						}
					}else{
						return false;
					}
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;	
				}	
			}else if (main.findKeyword(statement, "east") >= 0){
				x += 1;
				if ((x <=2 ) && (main.getInside().z == 1)){
					return true;	
				}else if (main.getInside().z == 0){
					if(x<=3){
						if((luck == 3)){
							return false;
						}else{
							return true;
						}
					}else{
						return false;
					}
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "west") >= 0){
				x -= 1;
				if(( x>=0 )&&(main.getInside().z == 1)){
					return true;	
				}else if(main.getInside().z == 0){
					if( x>=0 ){
						if((luck == 3)){
							return false;
						}else{
							return true;
						}
					}else{
						return false;
					}
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "up") >= 0){
				if(main.getInside().z == 0){
					main.getInside().x = 1;
					main.getInside().y = 0;
					return true;
				}else{
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "down") >= 0){
				if(main.getInside().x == 1 && main.getInside().y == 0 && main.getInside().z == 1){
					main.getInside().x = 1;
					main.getInside().y = 1;
					return true;
				}else{
					main.addMessage("There's nothing to climb", "AI");
					return false;
				}
			}
		}else if(main.getPlace() == main.getPlace().BOAT){
			int y = main.getInside().y;
			if (main.findKeyword(statement, "north")>=0){
				y -= 1;
				if(y < 0){
					main.addMessage("There's something in the way", "AI");
					return false;	
				}else{
					return true;
				}
			}else if (main.findKeyword(statement, "south") >= 0){
				y+=1;
				if(y>1){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().y = main.getOutside().y + 1;
					return false;
				}else{
					return true;
				}
			}else if (main.findKeyword(statement, "east") >= 0){
				if(main.getInside().y == 1){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().x = main.getOutside().x + 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "west") >= 0){
				if(main.getInside().y == 1){
					main.setInsides(main.getInsides().NONE);
					main.getOutside().x = main.getOutside().x - 1;
					return false;
				}else{
					main.addMessage("There's something in the way", "AI");
					return false;
				}
			}else if (main.findKeyword(statement, "up") >= 0){
				main.addMessage("There's nothing to climb", "AI");
				return false;
			}else if (main.findKeyword(statement, "down") >= 0){
				main.addMessage("There's nothing to climb", "AI");
				return false;
			}
		}
		return false;
	}
	*/
	/*
	public boolean checkmove(String statement){
		int x = main.getOutside().x;
		int y = main.getOutside().y;
		if (main.findKeyword(statement, "north")>=0){
			y -= 1;
		}else if (main.findKeyword(statement, "south") >= 0){
			y += 1;
		}else if (main.findKeyword(statement, "east") >= 0){
			x += 1;
		}else if (main.findKeyword(statement, "west") >= 0){
			x -= 1;
		}
		if((x == 1 && y == 4)||(x == 1 && y == 5)||(x == 2 && y == 4)||(x == 2 && y == 5)){
			main.addMessage("There's a mountain in the way", "AI");
			return false;
		}else if((x<0)||(y<0)||(x == 0 && ((y == 0)||(y == 1)||(y == 2)||(y == 7)))
				||(x == 3 && y == 0)||(x == 4 && y == 0)
				||(x == 5 && ((y == 0)||(y == 1)||(y == 2)||(y == 6)||(y == 7)))){	
			main.addMessage("There's no where to swim to", "AI");
			return false;
		}else if ((main.getOutside().x == 3 && main.getOutside().y == 2 && x == 3 && y == 1)
				||(main.getOutside().x == 3 && main.getOutside().y == 1 && x == 3 && y == 2)){
			main.addMessage("The woods are too dense to pass through", "AI");
			return false;
		}else if (((main.getOutside().x == 3)&&(main.getOutside().y == 4)&&(x == 3)&&(y == 5)&&(main.getLockedDoors()[0]==false))
				||((main.getOutside().x == 1)&&(main.getOutside().y == 6)&&(x == 1)&&(y == 7)&&(main.getLockedDoors()[1]==false))){	
			main.addMessage("The door is locked. Try using a key.", "AI");
			return false;
		}
		else if((x == 1 && y == 0)){ // Boat
			main.setPlace(main.getPlace().BOAT);
			main.setInsides(main.getInsides().BOAT_LAND);
			main.getInside().x = 0;
			main.getInside().y = 1;
			return true;
		}else if((x == 2 && y == 2)) { // Plane
			main.setPlace(main.getPlace().PLANE);
				if(y > main.getOutside().y){
					main.setInsides(main.getInsides().PLANE_COCKPIT);
					main.getInside().x = 0;
					main.getInside().y = 0;
				}else if(y < main.getOutside().y){
					main.setInsides(main.getInsides().PLANE_STORAGE);
					main.getInside().x = 0;
					main.getInside().y = 2;
				}else if(y == main.getOutside().y){
					main.setInsides(main.getInsides().PLANE_PASSENGER);
					main.getInside().x = 0;
					main.getInside().y = 1;
			}
			return true;	
		}else if(x == 4 && y == 2){ // Temple 
			if((main.getOutside().x == 4 && main.getOutside().y == 3) || (main.getOutside().x == 4 && main.getOutside().y == 1)){
				main.setPlace(main.getPlace().TEMPLE);
				main.setInsides(main.getInsides().TEMPLE_MAINROOM);
				main.getInside().x = 1;
				main.getInside().y = 0;
				main.getInside().z = 1;
				return true;
			}
			main.addMessage("There's something in the way", "AI");
			return false;
		}else if(x == 3 && y == 5){ // House
			if(main.getOutside().x == 3 && main.getOutside().y == 4){
				main.setPlace(main.getPlace().HOUSE);
				main.setInsides(main.getInsides().HOUSE_MAINROOM);
				main.getInside().x = 1;
				main.getInside().y = 0;
				return true;
			}
			main.addMessage("There's something in the way", "AI");
			return false;
		}else if(x == 1 && y == 7){ // Shack
			if(main.getOutside().x == 1 && main.getOutside().y == 6){	
				main.setPlace(main.getPlace().SHACK);
				main.setInsides(main.getInsides().SHACK_MAINROOM);
				main.getInside().x = 0;
				main.getInside().y = 0;
				main.getInside().z = 1;
				return true;
			}
			main.addMessage("There's something in the way", "AI");
			return false;
		}else if((x == 4 && y == 7)){ // TreeHouse
			main.setPlace(main.getPlace().TREEHOUSE);
			main.setInsides(main.getInsides().TREEHOUSE_GROUND);
			main.getInside().x = 0;
			main.getInside().y = 0;
			return true;
		}return true;
	}
*/
	
	public void itemsmoving(){
		for (Item temp: main.getBag()) {
			if (temp != null) {
				temp.getOutside().x = main.getOutside().x;
				temp.getOutside().y = main.getOutside().y;
				temp.getOutside().z = main.getOutside().z;
				
				temp.getInside().x = main.getInside().x;
				temp.getInside().y = main.getInside().y;
				temp.getInside().z = main.getInside().z;
			}
		}
	}
}